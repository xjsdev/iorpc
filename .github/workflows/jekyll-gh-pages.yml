# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Edit index.html
        run: |
          sudo sed -i 's|https://xjsdev.github.io/iorpc/|https://www.npmjs.com/package/iorpc|g' ./_site/index.html
          sudo sed -i '/<div class="footer border-top border-gray-light mt-5 pt-3 text-right text-gray">/,/<\/div>/d' ./_site/index.html
          META_TAG='<meta name="keywords" content="Node.js, JavaScript, RPC, Remote Procedure Call, Lightweight RPC, Inter-worker communication, Web Workers, SharedWorker, MessageChannel, JS communication, async function call, browser messaging, function proxy, thread communication, frontend utils, postMessage API, JavaScript library, JS workers communication, JSON-RPC, browser workers, iorpc, iorpc npm, iorpc JavaScript, call functions across contexts, proxy-based RPC, worker-to-main thread communication, JS threading, context bridge, worker utils JS, async communication JS, how to call function in Web Worker, lightweight RPC JavaScript, JS worker communication library, remote procedure call browser, simple RPC with postMessage, Call from another script, module for implementing a mechanism for remote asynchronous function calls">'
          sudo sed -i "s|</head>|$META_TAG\n</head>|g" {} + ./_site/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
